@page "/StartMatch"
@using CardsBlazor.Data.ViewModels
@using CardsBlazor.ApiControllers
@using CardsBlazor.Data
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons
@using Microsoft.AspNetCore.Http.Extensions
@using SelectionMode = Syncfusion.Blazor.DropDowns.SelectionMode
@inject MatchService MatchService
@inject PlayerService PlayerService
@inject GameService GameService
@inject NavigationManager NavigationManager
<h2>Start Match</h2>
<AuthorizeView>
    <Authorized Context="auth">
        <EditForm Model="@viewModel" OnSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <SfNumericTextBox @bind-Value="viewModel.EntranceFee" TValue="decimal" Format="c2" Placeholder="Stakes" Max="100" Step="5"></SfNumericTextBox>
            <SfDropDownList TValue="int?" TItem="GameChooseModel" Placeholder="Select a game" DataSource="@games" @bind-Value="viewModel.GameId">
                <DropDownListFieldSettings Value="GameId" Text="Name"></DropDownListFieldSettings>
            </SfDropDownList>
            <SfMultiSelect TValue="int[]" Placeholder="Choose Players" DataSource="@players" @bind-Value="viewModel.StartingPlayers">
                <MultiSelectFieldSettings Text="UserName" Value="PlayerId"></MultiSelectFieldSettings>
            </SfMultiSelect>
            <button class="btn btn-dark" type="submit">Submit</button>
        </EditForm>
    </Authorized>
    <NotAuthorized>
        <br />
        <h4>You must be signed in to start a match</h4>
    </NotAuthorized>
</AuthorizeView>

<SfDialog @bind-Visible="@IsExceptionDialogVisible" Width="250px" IsModal="true">
    <DialogEvents OnOverlayClick="ExceptionDialogClicked">
    </DialogEvents>
    <DialogTemplates>
        <Content> An exception has occurred. The match has not been created. </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton OnClick="ExceptionDialogClicked">
            <DialogButtonModel Content="Ok" IsPrimary="true"></DialogButtonModel>
        </DialogButton>
    </DialogButtons>
</SfDialog>


@code {

    private MatchCreateModel viewModel = new MatchCreateModel { EntranceFee = 1 };
    private List<PlayerViewModel> players { get; set; } = new List<PlayerViewModel>();
    private List<GameChooseModel> games { get; set; } = new List<GameChooseModel>();
    private EditContext editContext;
    private bool IsExceptionDialogVisible { get; set; } = false;
    private void HandleValidSubmit()
    {
        var isValid = editContext.Validate();
        if (!isValid) return;
        var matchId = MatchService.AddNewMatch(viewModel);
        if (matchId == -1)
        {
            IsExceptionDialogVisible = true;
        }
        else
        {
            NavigationManager.NavigateTo($"viewmatch/{matchId}", false);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        editContext = new EditContext(viewModel);
        players = await PlayerService.GetPlayersViewModel();
        games = GameService.GetAllAsChooseModels();
        Console.WriteLine($"Successfully loaded {players.Count} players");
    }
    private async Task<bool> RemoteValidate(EditContext editContext)
    {
        return true;
    }
    private void ExceptionDialogClicked()
    {
        IsExceptionDialogVisible = false;
    }
}
