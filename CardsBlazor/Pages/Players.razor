@page "/players"

@using CardsBlazor.Data
@using CardsBlazor.Data.Entity
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids
@using CardsBlazor.ApiControllers
@inject PlayerService PlayerService

<h1>Players</h1>

<p>This demonstrates all players in the system</p>

@if (PlayerList == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
<SfGrid TValue="PlayerViewModel" AllowPaging="true" Toolbar="@(new List<string>() {"Add", "Edit", "Delete", "Cancel", "Update"})">
    <GridEditSettings AllowAdding="true" AllowEditing="false" AllowDeleting="false" Mode="EditMode.Normal"></GridEditSettings>
    <DataManager Url="api/Player" Adaptor="Adaptors.WebApiAdaptor"></DataManager>

    <GridColumns>

        <GridColumn Field=@nameof(PlayerViewModel.EmailAddress) HeaderText="Email Address"></GridColumn>
        <GridColumn Field=@nameof(PlayerViewModel.UserName) HeaderText="User Name"></GridColumn>
        <GridColumn Field=@nameof(PlayerViewModel.RealName) HeaderText="Real Name"></GridColumn>
        <GridColumn Field=@nameof(PlayerViewModel.CurrentPosition) HeaderText="Current Pos" Type="ColumnType.Number" Format="C2" AllowEditing="false"></GridColumn>
        <GridColumn Field=@nameof(PlayerViewModel.LastPaid) HeaderText="Last Paid" Type="ColumnType.DateTime" EditType="EditType.DateTimePickerEdit"></GridColumn>
    </GridColumns>
</SfGrid>
}

@code {
    private List<PlayerViewModel> PlayerList;

    protected override async Task OnInitializedAsync()
    {
        PlayerList = await PlayerService.GetPlayersViewModel();
    }

}