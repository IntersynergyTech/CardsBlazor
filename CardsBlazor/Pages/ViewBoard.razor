@page "/board"

@using CardsBlazor.Data
@using CardsBlazor.ApiControllers
@using System.Timers
@using CardsBlazor.Data.ViewModels
@using Serilog
@inject PlayerService PlayerService
@inject BoardService BoardService
<h3>Legacy Board Viewer</h3>
@if (PlayerList != null)
{
    <table class="table">
        <thead class="thead-dark dark-mode-text">
            <tr>
                <th>Time</th>
                @foreach (var player in PlayerList.OrderBy(x => x.PlayerId))
                {
                    <th>@player.RealName</th>
                }
            </tr>
        </thead>
        @foreach (var board in BoardList)
        {
            <tr class="dark-mode-text">
                <td>
                    @board.TimeOfBoard.ToString("yyyy-MM-dd HH:mm:ss")
                </td>
                @foreach (var pos in board.Positions.OrderBy(x => x.Key.PlayerId))
                {
                    <td>
                        @pos.Value.ToString("C2")
                    </td>
                }
            </tr>
        }
    </table>
    <SfButton OnClick="Refresh">Refresh</SfButton>
}

@code {
    private List<PlayerViewModel> PlayerList;
    private List<BoardViewModel> BoardList = new List<BoardViewModel>();

    protected override async Task OnInitializedAsync()
    {
        PlayerList = await PlayerService.GetPlayersViewModel();
        var boardData = BoardService.GetNPositions(50, 0);
        BoardList = boardData;
        StateHasChanged();

    }


    private void Refresh()
    {
        var boardData = BoardService.GetNPositions(50, 0);
        BoardList = boardData;
        StateHasChanged();
    }

}
